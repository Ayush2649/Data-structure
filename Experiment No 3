Algorithm:
1.Initialize an empty stack.

2.Scan the postfix expression from left to right.

3.For each element in the expression:
If it's an operand (number), push it onto the stack.

4.If it's an operator (+, -, *, /, etc.), pop the top two elements from the stack, perform the operation, and push the result back onto the stack.

5.After scanning all elements, the result will be the only element left in the stack.

Code :
#include<stdio.h>
#include<conio.h>
#include<ctype.h>
int stack[20];
int top = -1;

void push(int x)
{
stack[++top] = x;
}

int pop()
{
return stack[top--];
}

int main()
{
char exp[20];
char *e;
int n1,n2,n3,num;
printf("Enter the expression : ");
scanf("%s",exp);
e = exp;
while(*e != '\0')
{
if(isdigit(*e))
{
num = *e - 48;
push(num);
}
else
{
n1 = pop();
n2 = pop();
switch(*e)
{
case '+':
{
n3 = n1 + n2;
break;
}
case '-':
{
n3 = n2 - n1;
break;
}
case '*':
{
n3 = n1 * n2;
break;
}
case '/':
{
n3 = n2/n1;
break;
}
}
push(n3);
}
e++;
}
printf("\nThe result of expression %s= %d\n\n",exp,pop());
getch();
return 0;
}
